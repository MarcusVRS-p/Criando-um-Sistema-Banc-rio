
def saque(*,saldo, valor, extrato, limite, limite_saques, numero_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques
    
    if excedeu_saldo:
      print("Operação falhou! Você não tem saldo suficiente.")

    elif excedeu_limite:
      print("Operação falhou! O valor do saque excede o limite.")

    elif excedeu_saques:
      print("Operação falhou! Número máximo de saques excedido.")

    elif valor > 0:
      saldo -= valor
      extrato += f"Saque: R$ {valor:.2f}\n"
      numero_saques += 1

    else:
      print("Operação falhou! O valor informado é inválido.")

    return saldo, extrato, numero_saques

def deposito(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"

    else:
        print("Operação falhou! O valor informado é inválido.")
   
    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("==========================================")

def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente números): ").strip()
    cpf = ''.join(filter(str.isdigit, cpf))

    if any(usuario["cpf"] == cpf for usuario in usuarios):
        print("CPF já cadastrado! Operação cancelada.")
        return
    nome = input("Informe o nome completo: ").strip()
    data_nascimento = input("Informe a data de nascimento (dd/mm/aaaa): ").strip()
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/UF): ").strip()
    novo_usuario = {
        "nome": nome,
        "data_nascimento": data_nascimento,
        "cpf": cpf,
        "endereco": endereco
    }

    usuarios.append(novo_usuario)
    print("Usuário cadastrado com sucesso!")

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF (somente números): ").strip()
    cpf = ''.join(filter(str.isdigit, cpf))
    usuario = next((u for u in usuarios if u["cpf"] == cpf), None)
    if usuario:
        numero_conta = len(contas) + 1
        nova_conta = {
            "agencia": agencia,
            "numero_conta": numero_conta,
            "usuario": usuario
        }
        contas.append(nova_conta)
        print(f"Conta criada com sucesso! Número: {numero_conta}")
    else:
        print("Usuário não encontrado. Cadastre o usuário antes de criar a conta.")

def listar_contas(contas):
    if not contas:
        print("Nenhuma conta cadastrada.")
        return

    print("\n========= LISTA DE CONTAS =========")
    for conta in contas:
        agencia = conta["agencia"]
        numero = conta["numero_conta"]
        nome_titular = conta["usuario"]["nome"]

        print(f"Agência: {agencia}")
        print(f"Número da Conta: {numero}")
        print(f"Titular: {nome_titular}")
        print("------------------------------")

menu = """

[d] Depositar
[s] Sacar
[e] Extrato
[q] Sair
[u] Cadastro de Usuário
[c] Cadastro de Conta
[l] Listar Contas

=> """

saldo = 0
limite = 500
extrato = ""
numero_saques = 0
LIMITE_SAQUES = 3
usuarios = []
contas = []
agencia = "0001"

while True:

    opcao = input(menu)

    if opcao == "d":
        valor = float(input("Informe o valor do depósito: "))
        saldo, extrato = deposito(saldo, valor, extrato)

    elif opcao == "s":
        valor = float(input("Informe o valor do saque: "))
        saldo, extrato, numero_saques = saque(saldo=saldo, valor=valor, extrato=extrato, limite=limite, limite_saques=LIMITE_SAQUES, numero_saques=numero_saques)


    elif opcao == "e":
        exibir_extrato(saldo, extrato=extrato)

    elif opcao == "u":
        criar_usuario(usuarios)
        
    elif opcao == "c":
        criar_conta(agencia, contas, usuarios)

    elif opcao == "l":
        listar_contas(contas)
        
    elif opcao == "q":
        break

    else:
        print("Operação inválida, por favor selecione novamente a operação desejada.")
